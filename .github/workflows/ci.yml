name: CI

on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    runs-on: ubuntu-latest

    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        php: ['8.3', '8.4']
        kubernetes: ['1.31.10', '1.32.6', '1.33.1']
        laravel: ['11.*', '12.*']
        prefer: [prefer-lowest, prefer-stable]
        include:
          - laravel: "11.*"
            testbench: "9.*"
          - laravel: "12.*"
            testbench: "10.*"

    name: PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }} - K8s v${{ matrix.kubernetes }} --${{ matrix.prefer }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, yaml
          coverage: pcov

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Prepare cache key
        id: prep
        run: |
          PHP_VERSION=${{ matrix.php }}
          LARAVEL_VERSION=${{ matrix.laravel }}
          PREFER_VERSION=${{ matrix.prefer }}

          # Remove any .* from the versions
          LARAVEL_VERSION=${LARAVEL_VERSION//.*}

          echo "cache-key=composer-php-$PHP_VERSION-$LARAVEL_VERSION-$PREFER_VERSION-${{ hashFiles('composer.json') }}" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Cache dependencies
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ steps.prep.outputs.cache-key }}

      - uses: medyagh/setup-minikube@latest
        name: Setup Minikube
        with:
          minikube-version: 1.36.0
          driver: docker
          container-runtime: containerd
          kubernetes-version: v${{ matrix.kubernetes }}

      - name: Enable VolumeSnapshots, CSI hostpath driver, metrics-server, and VPA
        run: |
          minikube addons enable volumesnapshots
          minikube addons enable csi-hostpath-driver
          minikube addons enable metrics-server
          minikube addons enable vertical-pod-autoscaler

      - name: Run Kubernetes Proxy
        run: |
          kubectl proxy --port=8080 --reject-paths="^/non-existent-path" &

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.prefer }} --prefer-dist --no-interaction

      - name: Setup in-cluster config
        run: |
          sudo mkdir -p /var/run/secrets/kubernetes.io/serviceaccount
          echo "some-token" | sudo tee /var/run/secrets/kubernetes.io/serviceaccount/token
          echo "c29tZS1jZXJ0Cg==" | sudo tee /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          echo "some-namespace" | sudo tee /var/run/secrets/kubernetes.io/serviceaccount/namespace
          sudo chmod -R 777 /var/run/secrets/kubernetes.io/serviceaccount/

      - name: Setting CRDs for testing
        run: |
          kubectl apply -f https://raw.githubusercontent.com/bitnami-labs/sealed-secrets/main/helm/sealed-secrets/crds/bitnami.com_sealedsecrets.yaml
          kubectl apply -f https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.3.0/standard-install.yaml

      - name: Run tests
        run: |
          vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml

      - uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: false
